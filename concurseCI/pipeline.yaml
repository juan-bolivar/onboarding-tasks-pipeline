resources:
- name: concourse-examples
  type: git
  icon: github
  source:
    uri: https://github.com/juan-bolivar/onboarding-tasks.git
    branch: infra

resource_types:
- name: fly
  type: docker-image
  source:
    repository: troykinsella/concourse-fly-resource
    tag: latest
    
jobs:
- name: build-and-run
  plan:
  - get: concourse-examples
  - task: build-image
    privileged: true # oci-build-task must run in a privileged container
    config:
      platform: linux
      image_resource:
        type: registry-image
        source:
          repository: concourse/oci-build-task
      inputs:
      - name: concourse-examples
      outputs:
      - name: image
      params:
        CONTEXT: concourse-examples
        UNPACK_ROOTFS: true #add this param
      run: 
        path: build

  - task: packer 
    image: image
    privileged: true # oci-build-task must run in a privileged container
    config:
      inputs:
      - name: concourse-examples
      outputs:
      - name: output_packer
      platform: linux
      run:
        path: sh
        args:
        - -exc
        - |
          export PKR_VAR_region=$AWS_REGION
          cd concourse-examples/packer && packer build -machine-readable . | tee ../../output_packer/build.log
          cd ..
          cd ..
          grep "artifact,0,id" output_packer/build.log  | tee output_packer/ami.out
          cut -d "," -f6 output_packer/ami.out  | tee output_packer/temp.out
          cut -d ":" -f2 output_packer/temp.out | tee output_packer/ami-id.out
      params:
        AWS_ACCESS_KEY_ID: ((AWS_KEY))
        AWS_SECRET_ACCESS_KEY: ((AWS_SECRET))
        AWS_REGION: ((AWS_REGION))
        AWS_DEFAULT_REGION: ((AWS_DEFAULT_REGION))
 
  - task: terraform  
    image: image
    privileged: true
    config:
      inputs:
      - name: output_packer
      - name: concourse-examples
      outputs:
      - name: output_terraform
      platform: linux
      run:
        path: sh
        args:
        - -exc
        - |
          ls 
          ami_id=$(cat output_packer/ami-id.out)
          export TF_VAR_datadog_api_key="((DATADOG_API_KEY))"
          export TF_VAR_datadog_app_key="((DATADOG_APP_KEY))"
          export DATADOG_APP_KEY="((DATADOG_APP_KEY))"
          export DATADOG_API_KEY="((DATADOG_API_KEY))"
          export DD_API_KEY="((DATADOG_API_KEY))"
          export DD_APP_KEY="((DATADOG_APP_KEY))"
          env
          cd concourse-examples/terraform && terraform init  && terraform apply -var="ami_id=$ami_id" -var="region=((AWS_REGION))" -auto-approve
      params:
        AWS_ACCESS_KEY_ID: ((AWS_KEY))
        AWS_SECRET_ACCESS_KEY: ((AWS_SECRET))
        AWS_REGION: ((AWS_REGION))
        AWS_DEFAULT_REGION: ((AWS_DEFAULT_REGION))
        DATADOG_API_KEY: ((DATADOG_API_KEY))
        DATADOG_APP_KEY: ((DATADOG_APP_KEY))
        DD_APP_KEY: ((DATADOG_APP_KEY))
        DD_API_KEY: ((DATADOG_API_KEY))

  - task: kubernetes  
    image: image
    privileged: true
    config:
      inputs:
      - name: output_packer
      - name: concourse-examples
      platform: linux
      run:
        path: sh
        args:
        - -exc
        - |
          ls
          cd concourse-examples/kubernetes
          bash script.sh 
      params:
        AWS_ACCESS_KEY_ID: ((AWS_KEY))
        AWS_SECRET_ACCESS_KEY: ((AWS_SECRET))
        AWS_REGION: ((AWS_REGION))
        AWS_DEFAULT_REGION: ((AWS_DEFAULT_REGION))
        
  - task: helm-chart  
    image: image
    privileged: true
    config:
      inputs:
      - name: output_packer
      - name: concourse-examples
      platform: linux
      run:
        path: sh
        args:
        - -exc
        - |
          ls
          cd concourse-examples/helm-chart
          bash script.sh
      params:
        AWS_ACCESS_KEY_ID: ((AWS_KEY))
        AWS_SECRET_ACCESS_KEY: ((AWS_SECRET))
        AWS_REGION: ((AWS_REGION))
        AWS_DEFAULT_REGION: ((AWS_DEFAULT_REGION))
